[
  {
    "question": "Quale di questi elementi è parte di un diagramma dei casi d'uso?",
    "answers": [
      "Attore",
      "Classe",
      "Metodo statico",
      "Pacchetto"
    ],
    "correct_answer": "Attore",
    "id": "8455f57a-ebf4-40df-b494-cc737c32471f"
  },
  {
    "question": "Cosa indicano le frecce in un diagramma di sequenza?",
    "answers": [
      "Eventi inviati da un oggetto ad un altro",
      "Relazioni di ereditarietà tra classi",
      "Dipendenze tra pacchetti",
      "Flussi di controllo tra moduli"
    ],
    "correct_answer": "Eventi inviati da un oggetto ad un altro",
    "id": "8d8f254b-ab84-4efc-8284-9e802ff07e0e"
  },
  {
    "question": "Che tipo di relazione può esistere tra un attore e un caso d'uso:",
    "answers": [
      "Associazione",
      "Ereditarietà",
      "Realizzazione",
      "Aggregazione"
    ],
    "correct_answer": "Associazione",
    "id": "1e9c0875-9a2e-48c4-9242-fb092a847fcd"
  },
  {
    "question": "Un prototipo viene sviluppato per:",
    "answers": [
      "Interagire con il committente per convalidare i requisiti",
      "Effettuare un primo test del sistema",
      "Prendere iniziativa senza interloquire con il committente",
      "Verificare le performance hardware in fase di sviluppo"
    ],
    "correct_answer": "Interagire con il committente per convalidare i requisiti",
    "id": "b41cfbaa-4fcc-4855-8548-bdc1c2550a0b"
  },
  {
    "question": "Il lavoro che deve essere eseguito da un partecipante al progetto, viene denominato:",
    "answers": [
      "Task",
      "Milestone",
      "Deliverable",
      "Workflow"
    ],
    "correct_answer": "Task",
    "id": "80421823-fb07-45dd-a3bb-9992de57ae2a"
  },
  {
    "question": "In UML gli stati sono rappresentati con:",
    "answers": [
      "Ovali",
      "Rettangoli",
      "Triangoli",
      "Diamanti"
    ],
    "correct_answer": "Ovali",
    "id": "ee995561-0ab0-47f2-894e-562eb9c8e6a3"
  },
  {
    "question": "Il tempo durante il quale un certo lavoro in un progetto deve essere fatto, viene denominato:",
    "answers": [
      "Schedule",
      "Deadline",
      "Milestone",
      "Scope"
    ],
    "correct_answer": "Schedule",
    "id": "634994ea-de69-4813-9dc6-a11597a31dab"
  },
  {
    "question": "Cosa indica un rettangolo verticale sotto un oggetto in un diagramma di sequenza?",
    "answers": [
      "Il periodo di attivazione di una operazione dell'oggetto",
      "La durata della vita dell'oggetto",
      "Il tempo di risposta del sistema",
      "La priorità dell'operazione"
    ],
    "correct_answer": "Il periodo di attivazione di una operazione dell'oggetto",
    "id": "868b8380-c8ec-4503-8893-4019074462a9"
  },
  {
    "question": "Cosa indica la linea tratteggiata verticale sotto un oggetto in un diagramma di sequenza?",
    "answers": [
      "La linea di vita dell'oggetto",
      "Il flusso di controllo tra oggetti",
      "Il messaggio ritardato",
      "L'attivazione temporanea dell'oggetto"
    ],
    "correct_answer": "La linea di vita dell'oggetto",
    "id": "5f49ed4e-ef7e-42ce-8130-b1ae2ba83e6c"
  },
  {
    "question": "Gli elementi tipici di un Sequence Diagram sono:",
    "answers": [
      "Gli oggetti ed i messaggi che si scambiano tra di loro",
      "L'insieme degli artefatti che compongono un sistema",
      "Le evoluzioni temporali degli stati di una classe",
      "I flussi di lavoro e l'insieme delle attività nel sistema"
    ],
    "correct_answer": "Gli oggetti ed i messaggi che si scambiano tra di loro",
    "id": "a1e938f5-5b25-4a57-ae6a-824f2fc012d2"
  },
  {
    "question": "Qual è l'output di questo codice? Boolean isJavaFun= true; System.out.println(!isJavaFun);",
    "answers": [
      "False",
      "True",
      "null",
      "Errore di compilazione"
    ],
    "correct_answer": "False",
    "id": "ef39f4a9-0fd7-4f97-8463-262fe57b0995"
  },
  {
    "question": "Quale dei seguenti scenari rende ideale l'uso del pattern Singleton?",
    "answers": [
      "quando l'applicazione richiede un unico punto di accesso a una risorsa condivisa",
      "quando si vogliono creare più istanze indipendenti di una classe",
      "quando è necessario clonare oggetti rapidamente",
      "quando si vogliono gestire operazioni asincrone in parallelo"
    ],
    "correct_answer": "quando l'applicazione richiede un unico punto di accesso a una risorsa condivisa",
    "id": "504d4bcc-982b-4120-8dc6-93e3b9242486"
  },
  {
    "question": "Significato OCL",
    "answers": [
      "Object Constraint Language",
      "Operational Control Logic",
      "Object Coordination List",
      "Open Class Library"
    ],
    "correct_answer": "Object Constraint Language",
    "id": "a07af397-aa4b-411a-a3b0-5e09a35bc15d"
  },
  {
    "question": "Qual è il ruolo della parola chiave break in un'istruzione switch-case?",
    "answers": [
      "Per terminare il blocco del case",
      "Per mettere in pausa l'esecuzione",
      "Per passare al case successivo",
      "Per ripetere il blocco del case"
    ],
    "correct_answer": "Per terminare il blocco del case",
    "id": "d8b1ca13-8841-4042-a59a-50c6cfa0ba94"
  },
  {
    "question": "Che cosa sono le classi astratte in Java?",
    "answers": [
      "Tutte le risposte sopra",
      "Classi che contengono metodi astratti",
      "Classi che possono essere usate come modelli per creare oggetti",
      "Classi che non possono essere istanziate"
    ],
    "correct_answer": "Tutte le risposte sopra",
    "id": "b5f56149-2f77-48a3-971f-0d5a6a9f377f"
  },
  {
    "question": "Qual è lo scopo della parola chiave “super” in Java?",
    "answers": [
      "Fare riferimento all'oggetto corrente",
      "Accedere ai membri della superclasse",
      "Creare una nuova istanza della classe",
      "Nascondere dati e metodi all'interno di una classe"
    ],
    "correct_answer": "Accedere ai membri della superclasse",
    "id": "ddd5129d-bd14-4821-ad80-c159ad033595"
  },
  {
    "question": "Quale tra questi strumenti è ideale per le comunicazioni asincrone?",
    "answers": [
      "Telefonata",
      "Meeting",
      "Brainstorming",
      "e-mail"
    ],
    "correct_answer": "e-mail",
    "id": "148abdf1-ba69-43d1-94e3-ccf248d66f16"
  },
  {
    "question": "Individua l'errore: int counter = 0; while(counter < 5) { counter++; } System.out.print(“contatore: “ + counter);",
    "answers": [
      "nessun errore",
      "il ciclo non termina mai",
      "il contatore non viene incrementato",
      "istruzione di stampa errata"
    ],
    "correct_answer": "nessun errore",
    "id": "745acb3d-824c-4d3e-b171-269d7bc40d9c"
  },
  {
    "question": "Quale dei seguenti non è un diagramma di UML:",
    "answers": [
      "stateflow diagram",
      "class diagram",
      "activity diagram",
      "component diagram"
    ],
    "correct_answer": "stateflow diagram",
    "id": "e7bfa582-00d9-4883-a588-5c6e82f53404"
  },
  {
    "question": "In quale tipo di diagramma UML viene utilizzato il simbolo del parallelepipedo?",
    "answers": [
      "un diagramma di deployment",
      "un diagramma di sequenza",
      "un diagramma di temporizzazione",
      "un diagramma di package"
    ],
    "correct_answer": "un diagramma di deployment",
    "id": "829c3f0f-b1d6-4bc4-99e3-b4ede1d7ee7c"
  },
  {
    "question": "In Java, qual è la convenzione corretta per scrivere i nomi delle classi?",
    "answers": [
      "Commandcase",
      "CanvalCase",
      "camelCase",
      "PascalCase"
    ],
    "correct_answer": "PascalCase",
    "id": "47f1f8e2-9d61-4272-a5a1-1fcb3bd264e8"
  },
  {
    "question": "Quali sono i principali livelli di visibilità in Java che supportano l'incapsulamento?",
    "answers": [
      "pubblico, protetto, privato",
      "globale, locale, interno",
      "statico, dinamico, astratto",
      "finale, volatile, transient"
    ],
    "correct_answer": "pubblico, protetto, privato",
    "id": "772c7dce-a4d1-481f-8590-65ca8ec4d072"
  },
  {
    "question": "Quale delle seguenti fasi non fa parte della definizione del problema?",
    "answers": [
      "walkthrough",
      "definizione del problema",
      "analisi dei requisiti",
      "raccolta informazioni"
    ],
    "correct_answer": "walkthrough",
    "id": "7cc5516f-19fa-41d5-9604-9020f7acca03"
  },
  {
    "question": "Qual è una differenza fondamentale tra una classe astratta e un'interfaccia in Java?",
    "answers": [
      "Una classe astratta può avere costruttori, un'interfaccia no",
      "Un'interfaccia può avere variabili di istanza, una classe astratta no",
      "Un'interfaccia può essere istanziata direttamente, una classe astratta no",
      "Una classe astratta non può avere metodi astratti"
    ],
    "correct_answer": "Una classe astratta può avere costruttori, un'interfaccia no",
    "id": "3f511a83-6c13-4856-80fc-9646f41a7c5d"
  },
  {
    "question": "Come si definisce un'interfaccia in Java?",
    "answers": [
      "Interfaccia, se è una classe senza attributi e con tutte le operazioni astratte",
      "Classe concreta con metodi implementati",
      "Classe astratta con attributi",
      "Solo astratta"
    ],
    "correct_answer": "Interfaccia, se è una classe senza attributi e con tutte le operazioni astratte",
    "id": "74b01c8f-e5d1-4c06-a02b-6b7257c0e81b"
  },
  {
    "question": "Qual è lo scopo della parola chiave 'abstract' in Java?",
    "answers": [
      "Dichiarare una classe o un metodo astratto",
      "Dichiarare solo una classe",
      "Dichiarare solo un metodo astratto",
      "Impedire l'ereditarietà della classe"
    ],
    "correct_answer": "Dichiarare una classe o un metodo astratto",
    "id": "b4c2e250-92c0-48fd-952e-bcb476932bc5"
  },
  {
    "question": "Quale termine indica la fase in cui il codice sorgente viene tradotto in codice eseguibile?",
    "answers": [
      "Compilazione",
      "Incapsulamento",
      "Esecuzione",
      "Debugging"
    ],
    "correct_answer": "Compilazione",
    "id": "66188d36-11c0-4e16-99fe-31efc4494e50"
  },
  {
    "question": "Cosa significa 'override' in programmazione orientata agli oggetti?",
    "answers": [
      "Fornire un'implementazione diversa per un metodo ereditato in una sottoclasse.",
      "Non fornire nulla",
      "Fornire la stessa implementazione per ogni metodo ereditato",
      "Eliminare un metodo ereditato"
    ],
    "correct_answer": "Fornire un'implementazione diversa per un metodo ereditato in una sottoclasse.",
    "id": "0d688e05-e38f-43ec-a888-368b009d41cb"
  },
  {
    "question": "Nei diagrammi di attività, un nodo di decisione si rappresenta con:",
    "answers": [
      "un rombo",
      "un'annotazione",
      "un rettangolo",
      "un rettangolo arrotondato"
    ],
    "correct_answer": "un rombo",
    "id": "c6b2a34c-5a98-41c1-9b2a-e4f130ea269a"
  },
  {
    "question": "Cos'è il ciclo di vita del software?",
    "answers": [
      "Il periodo di tempo che ha inizio quando un prodotto software è concepito e termina quando il prodotto non è più utilizzato.",
      "Il periodo di tempo che ha inizio quando un prodotto software è concepito e termina quando il prodotto non è più manutenuto.",
      "Il periodo di tempo che ha inizio quando un prodotto software è sviluppato e termina quando non è più aggiornato.",
      "Il periodo di tempo che ha inizio quando un prodotto software è rilasciato e termina quando il prodotto è dismesso."
    ],
    "correct_answer": "Il periodo di tempo che ha inizio quando un prodotto software è concepito e termina quando il prodotto non è più utilizzato.",
    "id": "fb4fe56e-07ef-4b2d-a083-882d623e6212"
  },
  {
    "question": "Qual è il ruolo del 'Time keeper' in una riunione?",
    "answers": [
      "gestire la durata dell'incontro",
      "gestire solo la prima parte dell'incontro",
      "programmare la durata del tempo",
      "moderare le discussioni"
    ],
    "correct_answer": "gestire la durata dell'incontro",
    "id": "ae368d74-b044-4c89-bae7-99615561d838"
  },
  {
    "question": "Quale tra questi termini è associato al pattern Singleton?",
    "answers": [
      "final",
      "const",
      "delete",
      "static"
    ],
    "correct_answer": "final",
    "id": "0af6aaee-36f1-4bda-845c-fd623cb1bacb"
  },
  {
    "question": "Qual è il compito principale del 'Minute taker' (segretario) durante una riunione?",
    "answers": [
      "verbalizzare i punti discussi",
      "scrivere l'ordine del giorno",
      "fissare appuntamento della riunione",
      "moderare la discussione"
    ],
    "correct_answer": "verbalizzare i punti discussi",
    "id": "c2089514-f0b4-411c-8f62-2e2b2d1c95d4"
  },
  {
    "question": "Quale istruzione permette di uscire prematuramente da un ciclo in Java?",
    "answers": [
      "break",
      "exit",
      "return",
      "continue"
    ],
    "correct_answer": "break",
    "id": "f0c057d9-da1e-46ad-85cb-616c16d699e4"
  },
  {
    "question": "Qual è la differenza tra overriding di metodo e overloading di metodo?",
    "answers": [
      "Tutte le risposte sopra.",
      "Il sovraccarico implica la creazione di più metodi con lo stesso nome ma parametri diversi, mentre la sovrascrittura implica fornire un'implementazione diversa per un metodo ereditato.",
      "L'overriding permette di modificare il comportamento di un metodo ereditato, mentre l'overloading consente di definire metodi con lo stesso nome ma firme diverse.",
      "L'overriding è un concetto di runtime, mentre l'overloading è risolto a compile time."
    ],
    "correct_answer": "Tutte le risposte sopra.",
    "id": "f810645f-d4a1-477f-ac7d-b20a37b4db89"
  },
  {
    "question": "Quale simbolo in UML rappresenta uno stato finale?",
    "answers": [
      "Un disco pieno",
      "Una ellissi",
      "Un disco vuoto",
      "Un rettangolo"
    ],
    "correct_answer": "Un disco pieno",
    "id": "06dc85ba-5c45-4075-9abb-6689b5064f94"
  },
  {
    "question": "Cos'è l'incapsulamento in programmazione orientata agli oggetti?",
    "answers": [
      "Il processo di combinare dati e metodi in un'unica unità",
      "Il processo di nascondere dati e metodi all'interno di una classe",
      "Il processo di combinare dati e metodi di due unità",
      "Il processo di nascondere dati e metodi all'esterno di una classe"
    ],
    "correct_answer": "Il processo di combinare dati e metodi in un'unica unità",
    "id": "ab425b2d-0223-4d59-b9fe-9b846e991408"
  },
  {
    "question": "Qual è l'output del seguente codice Java?\n\nint x = 0;\nSystem.out.println(x);",
    "answers": [
      "Nessun errore",
      "Stampa 0",
      "Stampa 1",
      "Errore di compilazione"
    ],
    "correct_answer": "Nessun errore",
    "id": "693ea606-ceb8-40de-a6ce-b5f9918d373f"
  },
  {
    "question": "Nel diagramma di PERT, cosa rappresenta il percorso critico?",
    "answers": [
      "Il percorso più lungo nel grafo dei task",
      "Il tempo massimo per un singolo task",
      "Il percorso più veloce nel grafo dei task",
      "Il numero totale di task completati"
    ],
    "correct_answer": "Il percorso più lungo nel grafo dei task",
    "id": "d989e8e0-5a6b-422d-8f19-9b071239cbe2"
  },
  {
    "question": "Quali diagrammi UML mostrano l'interazione tra oggetti nel tempo?",
    "answers": [
      "diagrammi di sequenza",
      "diagrammi delle attività",
      "diagrammi delle classi",
      "diagrammi dei componenti"
    ],
    "correct_answer": "diagrammi di sequenza",
    "id": "a3587296-0675-41de-8b04-ecada915b4b9"
  },
  {
    "question": "Nei diagrammi di attività, qual è il focus principale?",
    "answers": [
      "il focus è sull'attività e non su chi la svolge",
      "il focus è su chi svolge una attività",
      "il focus è sulle variazioni dello stato interno in seguito al verificarsi di eventi",
      "il focus è sulla struttura delle operazioni di un oggetto"
    ],
    "correct_answer": "il focus è sull'attività e non su chi la svolge",
    "id": "944a7d87-da46-429a-8b58-0bdaf36580c8"
  },
  {
    "question": "Nei diagrammi di attività UML, come si rappresenta un'azione o uno stato?",
    "answers": [
      "Rettangoli con angoli arrotondati",
      "Rettangoli",
      "Quadrati",
      "Cerchi"
    ],
    "correct_answer": "Rettangoli con angoli arrotondati",
    "id": "8ae8838d-44a4-401f-8c80-b2301e11a33d"
  },
  {
    "question": "Cos'è l'incapsulamento in programmazione orientata agli oggetti?",
    "answers": [
      "Il processo di combinare dati e metodi in un'unica unità",
      "Il processo di riutilizzare il codice da classi esistenti",
      "Il processo di nascondere dati e metodi all'interno di una classe",
      "Il processo di creare nuove classi"
    ],
    "correct_answer": "Il processo di combinare dati e metodi in un'unica unità",
    "id": "f65208cc-3bb2-4a97-8a58-28e6e1808191"
  },
  {
    "question": "In UML, una classe è rappresentata graficamente con:",
    "answers": [
      "una ellisse con eventuali divisioni",
      "un rettangolo avente minimo 3 compartimenti",
      "un rettangolo avente massimo 3 compartimenti",
      "un rettangolo avente fino a 3 compartimenti, ma almeno uno"
    ],
    "correct_answer": "un rettangolo avente fino a 3 compartimenti, ma almeno uno",
    "id": "9726fa72-7568-4dd1-a5b7-5848e7268598"
  },
  {
    "question": "Un diagramma di package è rappresentato da:",
    "answers": [
      "Un rettangolo con una linguetta a sinistra",
      "Un rettangolo arrotondato con una linguetta a sinistra",
      "Un rettangolo",
      "Un rettangolo con una linguetta a destra"
    ],
    "correct_answer": "Un rettangolo con una linguetta a sinistra",
    "id": "f810e54d-e7de-4b40-a9ce-c2cb4a12c3f7"
  },
  {
    "question": "Come si rappresenta un'azione o uno stato nei diagrammi di attività UML?",
    "answers": [
      "Un rettangolo arrotondato",
      "Una freccia con tratteggio e punta vuota",
      "Una ellissi",
      "Un rombo"
    ],
    "correct_answer": "Un rettangolo arrotondato",
    "id": "4806cd9f-63cd-4cd0-afc0-36ec39a98512"
  },
  {
    "question": "Qual è lo scopo principale di un diagramma di attività UML?",
    "answers": [
      "modellano il comportamento dinamico del sistema, in particolare il workflow, come ad esempio un flowchart.",
      "Inizializzano il programma",
      "Definiscono le strutture dati del sistema",
      "Rappresentano l'architettura hardware"
    ],
    "correct_answer": "modellano il comportamento dinamico del sistema, in particolare il workflow, come ad esempio un flowchart.",
    "id": "94e70997-aa64-4cf5-82eb-4c39ef5aa6eb"
  },
  {
    "question": "Qual è il significato di riutilizzo del codice nella programmazione?",
    "answers": [
      "Riutilizzo del codice",
      "Variazione del codice esistente",
      "Scrittura di nuovo codice da zero",
      "Eliminazione del codice duplicato"
    ],
    "correct_answer": "Riutilizzo del codice",
    "id": "0a16399d-4cfc-42e8-a9a6-8d77aa936701"
  },
  {
    "question": "Qual è una caratteristica del ciclo do-while in Java?",
    "answers": [
      "Il ciclo do-while viene eseguito almeno una volta",
      "Il ciclo do-while non viene eseguito",
      "Il ciclo do-while viene eseguito due volte",
      "Il ciclo do-while viene eseguito solo se la condizione è vera inizialmente"
    ],
    "correct_answer": "Il ciclo do-while viene eseguito almeno una volta",
    "id": "34013796-c0ed-4e1b-8a7d-25600a775af9"
  },
  {
    "question": "Qual è l'obiettivo principale del pattern State?",
    "answers": [
      "Permettere a un oggetto di cambiare comportamento in base al proprio stato",
      "Separare l'interfaccia dall'implementazione",
      "Creare una singola istanza di un oggetto per tutta l'applicazione",
      "Rimuovere la complessità del ciclo di vita degli oggetti"
    ],
    "correct_answer": "Permettere a un oggetto di cambiare comportamento in base al proprio stato",
    "id": "04426d30-ea11-408f-b785-75616343afe9"
  },
  {
    "question": "Cos'è la sovrascrittura (overriding) in programmazione orientata agli oggetti?",
    "answers": [
      "Fornire un'implementazione diversa per un metodo ereditato in una sottoclasse.",
      "Creare più metodi con lo stesso nome ma parametri diversi all'interno della stessa classe.",
      "Definire una nuova classe senza ereditare da una superclass.",
      "Utilizzare una classe senza ridefinire nessun metodo."
    ],
    "correct_answer": "Fornire un'implementazione diversa per un metodo ereditato in una sottoclasse.",
    "id": "d1bf3dd9-ae8d-4a1a-89cb-b8a243d79404"
  },
  {
    "question": "Qual è l'output o l'errore del seguente codice Java?\n\nint[] arr = {1, 2, 3};\nSystem.out.println(arr[3]);",
    "answers": [
      "Indice fuori dai limiti dell'array",
      "Nessun errore",
      "Stampa 3",
      "Errore di sintassi"
    ],
    "correct_answer": "Indice fuori dai limiti dell'array",
    "id": "08f5c517-a4df-4993-8ee4-892865b52bd0"
  },
  {
    "question": "Qual è lo scopo principale di un diagramma di sequenza?",
    "answers": [
      "Il diagramma di sequenza mostra la struttura dei messaggi che gli oggetti coinvolti si scambiano al fine di realizzare un comportamento.",
      "Il diagramma di sequenza può completare un diagramma della classe mostrandone il comportamento dinamico.",
      "Il diagramma di sequenza documenta tipicamente il comportamento di un singolo scenario e, tipicamente, si accompagna ad un diagramma di caso d'uso.",
      "Il diagramma di sequenza rappresenta la struttura statica delle classi nel sistema."
    ],
    "correct_answer": "Il diagramma di sequenza mostra la struttura dei messaggi che gli oggetti coinvolti si scambiano al fine di realizzare un comportamento.",
    "id": "4dd44ab4-dad0-41c3-9cad-ffd615a25cde"
  },
  {
    "question": "Qual è uno svantaggio tipico di un metodo complesso?",
    "answers": [
      "Non è facilmente comprensibile ed applicabile",
      "È facilmente comprensibile",
      "È facilmente applicabile",
      "È sempre efficiente"
    ],
    "correct_answer": "Non è facilmente comprensibile ed applicabile",
    "id": "af454a41-5582-43e6-8624-4563d294aa63"
  },
  {
    "question": "Qual è l'intervallo del tipo di dato short in Java?",
    "answers": [
      "-32768 a 32767",
      "-128 a 127",
      "-2147483648 a 2147483647",
      "0 a 65535"
    ],
    "correct_answer": "-32768 a 32767",
    "id": "724006d3-bb45-4c0a-857c-fd6e2e89ed29"
  },
  {
    "question": "Dove possono comparire i metadati in Java?",
    "answers": [
      "Possono comparire usando le annotazioni",
      "Non possono comparire",
      "Possono comparire solo in fase di compilazione",
      "Possono comparire solo nei commenti"
    ],
    "correct_answer": "Possono comparire usando le annotazioni",
    "id": "891692f4-3389-45b1-9ced-1a72a8f98e33"
  },
  {
    "question": "Quale tra i seguenti è uno strumento ideale per comunicazioni sincrone a distanza?",
    "answers": [
      "Videoconferenza",
      "Presenza",
      "Email",
      "Messaggistica asincrona"
    ],
    "correct_answer": "Videoconferenza",
    "id": "ee6c4842-98f8-4fbb-b914-ee43046fc279"
  },
  {
    "question": "Cosa indica una vista (view) in un modello di sistema?",
    "answers": [
      "Mostra alcuni aspetti selezionati di un modello",
      "Mostra un modello completo",
      "Mostra solo alcuni modelli",
      "Mostra il codice sorgente del sistema"
    ],
    "correct_answer": "Mostra alcuni aspetti selezionati di un modello",
    "id": "383cab63-c3ff-437e-8021-1ceb08645dff"
  },
  {
    "question": "Quale sarà l'output del seguente codice Java?\n\nint x = 10;\nif (x > 5) {\n    System.out.println(\"Maggiore\");\n} else {\n    System.out.println(\"Minore\");\n}",
    "answers": [
      "Maggiore",
      "Minore",
      "Errore di compilazione",
      "Nessun output"
    ],
    "correct_answer": "Maggiore",
    "id": "57fc1a7f-3d8b-4049-b7b7-cb5bcc45b694"
  },
  {
    "question": "Qual è il vantaggio principale dello stream parallelo in Java?",
    "answers": [
      "Permette di eseguire operazioni parallele sui dati della collezione",
      "Permette il riutilizzo dell'iterazione su vari tipi di collezione",
      "Garantisce l'ordine degli elementi durante l'elaborazione",
      "Semplifica la gestione delle eccezioni durante l'elaborazione"
    ],
    "correct_answer": "Permette di eseguire operazioni parallele sui dati della collezione",
    "id": "92464fc8-bab0-46e5-90a0-816bf1b8de7d"
  },
  {
    "question": "Qual è lo scopo principale del pattern Singleton?",
    "answers": [
      "Assicurarsi che una classe abbia una sola istanza e fornire un punto di accesso globale",
      "Definire una classe che può esistere in uno stato solo",
      "Definire una classe che può esistere in più stati",
      "Creare una nuova istanza ogni volta che viene richiesta"
    ],
    "correct_answer": "Assicurarsi che una classe abbia una sola istanza e fornire un punto di accesso globale",
    "id": "96d2ee16-ceb8-4d77-ab45-0c8e8a71b726"
  },
  {
    "question": "Una astrazione in UML",
    "answers": [
      "è una classificazione di fenomeni in concetti",
      "è un insieme di regole grafiche o testuali",
      "è un oggetto nell'universo di dominio cosi come lo percepiamo",
      "mostra alcuni aspetti selezionati di un modello"
    ],
    "correct_answer": "è una classificazione di fenomeni in concetti",
    "id": "f5529de8-c4dc-4578-84dc-fe530fa53028"
  },
  {
    "question": "La modellazione si definisce come:",
    "answers": [
      "Lo sviluppo di astrazioni per rispondere a domande specifiche su un insieme di fenomeni rilevanti, ignorando i dettagli irrilevanti",
      "Lo sviluppo di astrazioni per rispondere a domande specifiche su un insieme di fenomeni rilevanti, in tutti i loro dettagli",
      "Lo sviluppo di oggetti per rispondere a domande specifiche su un insieme di fenomeni rilevanti, ignorando i dettagli irrilevanti",
      "Lo sviluppo di prototipi per rispondere a domande specifiche su un insieme di fenomeni rilevanti, ignorando i dettagli irrilevanti"
    ],
    "correct_answer": "Lo sviluppo di astrazioni per rispondere a domande specifiche su un insieme di fenomeni rilevanti, ignorando i dettagli irrilevanti",
    "id": "8e9e7c56-f82e-4667-b5cf-d0477959aa9c"
  },
  {
    "question": "Qual è la differenza tra sovraccarico di metodo e sovrascrittura di metodo in Java?",
    "answers": [
      "La sovrascrittura fornisce una nuova implementazione, mentre il sovraccarico fornisce più metodi con lo stesso nome",
      "Il sovraccarico è un concetto di polimorfismo a tempo di compilazione, mentre la sovrascrittura è un concetto di polimorfismo",
      "Il sovraccarico implica la creazione di più metodi con lo stesso nome ma parametri diversi, mentre la sovrascrittura implica",
      "Sono la stessa cosa"
    ],
    "correct_answer": "La sovrascrittura fornisce una nuova implementazione, mentre il sovraccarico fornisce più metodi con lo stesso nome",
    "id": "0e600b57-afff-4956-8187-7f7e18b00091"
  },
  {
    "question": "Quando si usa la parola chiave break in un'istruzione switch-case?",
    "answers": [
      "Per terminare il blocco del case",
      "Per mettere in pausa l'esecuzione",
      "Per ripetere il blocco del case",
      "Per passare al case successivo"
    ],
    "correct_answer": "Per terminare il blocco del case",
    "id": "810b5089-9a86-4bc8-910c-b027bd3b95ea"
  },
    {
    "question": "In un diagramma Gantt, cosa rappresentano le barre orizzontali?",
    "answers": [
      "task completato",
      "tempo necessario",
      "risultato stimato",
      "deliverable"
    ],
    "correct_answer": "deliverable",
    "id": "c7aba9b2-8fe9-4920-a389-050db3ca477f"
  },
  {
    "question": "UML definisce:",
    "answers": [
      "12 categorie di entità",
      "3 livelli di dettaglio",
      "8 principali componenti UML",
      "5 principali tipologie di diagrammi"
    ],
    "correct_answer": "5 principali tipologie di diagrammi",
    "id": "c035a8d5-93f4-404f-95c3-722ba08d9d94"
  },
  {
    "question": "In Java gli identificatori",
    "answers": [
      "devono iniziare con una lettera maiuscola",
      "devono avere massimo 255 caratteri",
      "non hanno un limite massimo di caratteri",
      "sono limitati a 64 caratteri"
    ],
    "correct_answer": "non hanno un limite massimo di caratteri",
    "id": "42f79602-f3d6-4557-abc8-28c0397ad82b"
  },
  {
    "question": "Qual è lo scopo principale dell'ereditarietà in Java?",
    "answers": [
      "Riutilizzo del codice",
      "Esecuzione parallela",
      "Definizione di costanti",
      "Gestione della memoria"
    ],
    "correct_answer": "Riutilizzo del codice",
    "id": "11dba7ea-51e9-4cbe-9734-fa9cf5507354"
  },
  {
    "question": "I principi dell'ingegneria del software possono essere definiti come",
    "answers": [
      "Simulazione e modellazione",
      "Flessibilità e adattabilità",
      "Precisione sintattica e semantica",
      "Rigore e formalità, modularità, astrazione, anticipazione al cambiamento, generalità, incrementalità"
    ],
    "correct_answer": "Rigore e formalità, modularità, astrazione, anticipazione al cambiamento, generalità, incrementalità",
    "id": "37cb35a9-9373-4ced-819b-011ff1d8309b"
  },
  {
    "question": "Qual è la parola chiave usata per dichiarare un'interfaccia in Java?",
    "answers": [
      "Implements",
      "Abstract",
      "Interface",
      "ImplementsInterface"
    ],
    "correct_answer": "Interface",
    "id": "1979b2e5-1cc8-46de-85cd-f879e38bc7c0"
  },
  {
    "question": "Una vista in UML:",
    "answers": [
      "mostra alcuni aspetti selezionati di un modello",
      "rappresenta tutti gli oggetti",
      "espone solo i metodi pubblici",
      "mostra la gerarchia delle classi"
    ],
    "correct_answer": "mostra alcuni aspetti selezionati di un modello",
    "id": "1c072b66-b3b2-4007-8aec-d32eee032a3e"
  },
  {
    "question": "Nell'ambito della Ingegneria del Software, quale è il significato dell'acronimo CASE:",
    "answers": [
      "Computer-Aided Software Engineering",
      "Collaborative Approach to Software Engineering",
      "Common Architecture Software Environment",
      "Computation Algorithm Simulation Environment"
    ],
    "correct_answer": "Computer-Aided Software Engineering",
    "id": "79593c34-eb40-47cd-9e7b-05abdc46e558"
  },
  {
    "question": "Nei diagrammi di attività, i nodi segnale temporali si rappresentano con:",
    "answers": [
      "una clessidra stilizzata",
      "un cerchio con una freccia",
      "un triangolo rovesciato",
      "una freccia spezzata"
    ],
    "correct_answer": "una clessidra stilizzata",
    "id": "57456d9b-dbbd-4684-9c29-7e414e56c7ca"
  },
  {
    "question": "Nel diagramma di sequenza, Nel caso di messaggio asincrono:",
    "answers": [
      "l'oggetto che invia il messaggio non attende la risposta prima di continuare con altre interazioni dello scenario. Un messaggio asincrono è rappresentato con una freccia a linea.",
      "richiede conferma di ricezione",
      "è rappresentato con una linea tratteggiata",
      "l'oggetto che invia il messaggio attende una risposta prima di proseguire"
    ],
    "correct_answer": "l'oggetto che invia il messaggio non attende la risposta prima di continuare con altre interazioni dello scenario. Un messaggio asincrono è rappresentato con una freccia a linea.",
    "id": "8e2f7597-2e45-4978-8ea9-9e4baf05a7b7"
  },
  {
    "question": "Quale di questi tipi di comunicazione in un progetto software non può definirsi asincrona:",
    "answers": [
      "deliverable",
      "mostra alcuni aspetti selezionati di un modello",
      "una clessidra stilizzata",
      "Videoconferenza"
    ],
    "correct_answer": "Videoconferenza",
    "id": "a53ca716-c317-4550-8c16-bb6c55f9703f"
  },
 {
  "question": "Il flusso di controllo:",
  "answers": [
    "passa da un'azione alla successiva dopo aver terminato l'esecuzione dell'azione seguendo il token",
    "indica la sequenza logica di esecuzione delle attività in un processo",
    "rappresenta un documento di pianificazione del progetto",
    "è un principio che guida la struttura e l'organizzazione del codice"
  ],
  "correct_answer": "passa da un'azione alla successiva dopo aver terminato l'esecuzione dell'azione seguendo il token",
  "id": "2202eeb6-89c5-4214-ba01-f1d1e245b637"
}
,
  {
  "question": "In Java il blocco di codice che definisce un metodo è delimitato da",
  "answers": [
    "parentesi tonde",
    "parentesi quadre",
    "parentesi graffe",
    "virgolette"
  ],
  "correct_answer": "parentesi graffe",
  "id": "6b18c5ab-ff8f-4382-a157-f143966da6de"
}
,
 {
  "question": "Il ciclo di vita del software è:",
  "answers": [
    "Il processo di sviluppo e manutenzione del software",
    "L'insieme delle fasi di progettazione, implementazione e test",
    "Le metodologie per garantire la qualità del software",
    "Il periodo di tempo che ha inizio quando un prodotto software è concepito e termina quando il prodotto non è più utilizzato."
  ],
  "correct_answer": "Il periodo di tempo che ha inizio quando un prodotto software è concepito e termina quando il prodotto non è più utilizzato.",
  "id": "9b0ab504-b1bf-44c0-8a89-d093152a999a"
}
,
  {
  "question": "Qual è la differenza tra una classe e un oggetto in Java?",
  "answers": [
    "Una classe definisce il tipo di dati e i comportamenti, mentre un oggetto è l'implementazione concreta di quella classe",
    "Un oggetto contiene metodi statici, mentre una classe no",
    "Una classe è un modello per creare oggetti, mentre un oggetto è un'istanza di una classe.",
    "Un oggetto può esistere senza classe, mentre una classe no"
  ],
  "correct_answer": "Una classe è un modello per creare oggetti, mentre un oggetto è un'istanza di una classe.",
  "id": "1dde8a35-247e-4a9e-9337-fc592fbd6b84"
}
,
  {
  "question": "Nei diagrammi di attività, una entità o un oggetto passato da una attività all'altra si rappresenta con:",
  "answers": [
    "Un simbolo che indica il flusso di controllo tra attività",
    "Una freccia con etichetta che rappresenta il trasferimento dei dati",
    "Un rettangolo",
    "Un cerchio che rappresenta l'inizio o la fine di un'attività"
  ],
  "correct_answer": "Un rettangolo",
  "id": "546724ff-32c3-40c7-81f3-4314bc2e7f36"
}
,
 {
  "question": "Quale tra i seguenti eventi di comunicazione ha l'obiettivo di migliorare la qualità di un sottosistema?",
  "answers": [
    "Code review formale tra sviluppatori",
    "Verifica dei requisiti con il team di progetto",
    "walkthrough",
    "Test di integrazione automatizzati"
  ],
  "correct_answer": "walkthrough",
  "id": "79481744-c3ba-41fb-9162-9d0a9bc7e49b"
}
,
  {
  "question": "Quali delle seguenti affermazioni riguardo ai diagrammi di sequenza non è accettabile:",
  "answers": [
    "Un diagramma di sequenza rappresenta solo le classi senza mostrare le interazioni",
    "Mostra le comunicazioni tra oggetti nel tempo, senza dettagliare i metodi specifici",
    "Il diagramma di sequenza mostra la struttura dei messaggi che gli oggetti coinvolti si scambiano al fine di realizzare un comportamento.",
    "Serve a descrivere esclusivamente i flussi di controllo interni agli oggetti"
  ],
  "correct_answer": "Il diagramma di sequenza mostra la struttura dei messaggi che gli oggetti coinvolti si scambiano al fine di realizzare un comportamento.",
  "id": "5dbcf5a4-9366-42c7-85ad-c3c3f4c012b9"
}
,
 {
  "question": "Quale sarà l'output di questo codice?     if(false){        System.out.println(\"True\");    } else {        System.out.println(\"False\");    }",
  "answers": [
    "True",
    "true",
    "0",
    "False"
  ],
  "correct_answer": "False",
  "id": "698d8fc0-d49a-4230-be89-3ef9600f3caa"
}
,{
  "question": "I diversi tipi di visibilità per le operazioni nel diagramma delle classi sono:",
  "answers": [
    "pubblico, privato, package",
    "protetto, statico, finale",
    "pubblico, protetto, privato",
    "visibile solo all'interno del pacchetto"
  ],
  "correct_answer": "pubblico, protetto, privato",
  "id": "9df519f7-9838-4dc7-b0aa-58b5731c25b8"
}
,{
  "question": "La pianificazione, quale settore del modello a spirale prevede",
  "answers": [
    "Definizione degli obiettivi e delle alternative di progetto",
    "Valutazione dei rischi e delle soluzioni possibili",
    "la revisione e la pianificazione del prossimo giro della spirale",
    "Implementazione e test del prototipo sviluppato"
  ],
  "correct_answer": "la revisione e la pianificazione del prossimo giro della spirale",
  "id": "e2405c8c-56ce-4a2a-97fe-98b6b4ba813d"
}
,
{
  "question": "Un modello è definito come:",
  "answers": [
    "una rappresentazione semplificata di un sistema",
    "una descrizione concisa di un processo",
    "Un'astrazione che descrive un sistema o un sottosistema",
    "un insieme di diagrammi e documentazione"
  ],
  "correct_answer": "Un'astrazione che descrive un sistema o un sottosistema",
  "id": "0267b74c-03ee-4a79-b9a4-5da499ba4d5c"
}
,
    {
    "question": "Secondo le convenzioni di Java gli identficatori dei metodi",
    "answers": [
      "devono essere descrittivi e concisi",
      "devono iniziare per lettera minuscola",
      "non devono contenere spazi o caratteri speciali",
      "non possono coincidere con parole chiave del linguaggio"
    ],
    "correct_answer": "devono iniziare per lettera minuscola",
    "id": "4bf71107-f2c1-432b-aaee-4d1cb4e7199a"
  },
  {
    "question": "In Java è possibile dichiarare un metodo al di fuori del blocco  di codice che definisce una classe?",
    "answers": [
      "solo se è un metodo statico",
      "solo in un'interfaccia",
      "no, mai",
      "solo all'interno di un package speciale"
    ],
    "correct_answer": "no, mai",
    "id": "c883bcad-380e-49dd-a692-ddc399ae7a17"
  },
  {
    "question": "In object-oriented, astrazione significa:",
    "answers": [
      "trascurare elementi non essenziali nella modellazione di un concetto per la risoluzione di un problema",
      "rappresentare tutti i dettagli di un oggetto",
      "concentrarsi solo sugli aspetti visibili di un oggetto",
      "creare una copia di un oggetto senza modificarne lo stato"
    ],
    "correct_answer": "trascurare elementi non essenziali nella modellazione di un concetto per la risoluzione di un problema",
    "id": "dbe2d677-bd0f-47e8-8f5f-38f310381ed3"
  },
 
  {
    "question": "In quale delle seguenti situazioni non è adatto l'uso del pattern State?",
    "answers": [
      "quando si ha un elevato numero di stati e transizioni complessi",
      "quando gli stati sono pochi e ben definiti",
      "quando le transizioni sono semplici e prevedibili",
      "quando è necessario cambiare comportamento dinamicamente"
    ],
    "correct_answer": "Quando si ha un elevato numero di stati e transizioni complessi",
    "id": "40d9f45a-9452-494e-b2e1-7a0644d01cd0"
  },
  {
    "question": "Qual è la differenza tra i cicli while e do-while in Java?",
    "answers": [
      "Il ciclo do-while viene eseguito almeno una volta",
      "Il ciclo while esegue sempre almeno una volta",
      "Il ciclo while viene eseguito almeno una volta",
      "Il ciclo do-while può non essere eseguito mai"
    ],
    "correct_answer": "Il ciclo do-while viene eseguito almeno una volta",
    "id": "dcef8253-bcfe-48f3-9bc0-f4eaa6dfbda7"
  },
  {
    "question": "Qual è il ruolo del \"time keeper\" durante un meeting?",
    "answers": [
      "gestire la durata dell'incontro",
      "annotare i punti principali della discussione",
      "assicurarsi che tutti partecipino",
      "coordinare l'agenda e le attività"
    ],
    "correct_answer": "gestire la durata dell'incontro",
    "id": "384ad27c-6ce6-421b-81c1-8e4d8fcadcb6"
  },
  {
    "question": "Individua l'errore:     int counter = 0;    while(counter < 5) {        counter++;    }    System.out.println(\"Contatore: \" + counter);",
    "answers": [
      "nessun errore",
      "manca l'incremento del counter",
      "la condizione del while è sbagliata",
      "il counter dovrebbe partire da 1"
    ],
    "correct_answer": "Nessun errore",
    "id": "c8e3253e-f9cd-4a59-935f-e8846732bb8a"
  },
  {
    "question": "Qual è la differenza tra variabili statiche e di istanza in Java?",
    "answers": [
      "statiche appartengono alla classe, istanza appartengono all'oggetto",
      "statiche condividono il valore tra tutti gli oggetti, istanza no",
      "statiche possono essere accessibili senza creare un oggetto, istanza no",
      "Tutte le risposte"
    ],
    "correct_answer": "Tutte le risposte",
    "id": "25bcdcbb-1c4d-4ec1-a536-4afb157d603e"
  }
,
  
  {
    "question": "Qual è lo scopo della parola chiave \"this\" in Java?",
    "answers": [
      "Fare riferimento all'oggetto corrente",
      "Riferirsi alla superclasse",
      "Accedere a variabili statiche",
      "Chiamare un metodo esterno"
    ],
    "correct_answer": "Fare riferimento all'oggetto corrente",
    "id": "e014d7f5-5bd1-47ab-9c95-91d15d6886a7"
  },
  {
    "question": "In object-oriented incapsulamento isignfica:",
    "answers": [
      "accesso ai dati regolato da apposita interfaccia",
      "nascondere i dati privati e proteggerli dall'accesso diretto",
      "permesso di accesso illimitato ai dati",
      "forzare la visibilità pubblica di tutte le proprietà"
    ],
    "correct_answer": "accesso ai dati regolato da apposita interfaccia",
    "id": "3d49eca4-e92e-473f-9171-5ee43a1c20ca"
  },
  {
    "question": "Per identificare le classi in fase di analisi si parte",
    "answers": [
      "dal testo dei requisiti forniti dal committente del sistema software",
      "dall'architettura fisica del sistema",
      "dalla documentazione tecnica precedente",
      "dalle implementazioni già esistenti"
    ],
    "correct_answer": "dal testo dei requisiti forniti dal committente del sistema software",
    "id": "7192c10f-263c-48b5-aff4-96722f1c88ad"
  },
  {
    "question": "Quali informazioni sarebbe opportuno associare a ogni caso d' uso (oltre al nome, scenario principale e estensioni):",
    "answers": [
      "precondizioni, garanzia e trigger",
      "attori coinvolti e durata prevista",
      "diagramma delle classi associato",
      "descrizione tecnica dettagliata"
    ],
    "correct_answer": "precondizioni, garanzia e trigger",
    "id": "4f402bce-066f-41e4-9266-4f1988d326f5"
  }
,

  {
    "question": "Un' associazione riflessiva si applica:",
    "answers": [
      "tra istanze di classi diverse",
      "tra istanze della stessa classe",
      "tra classi astratte",
      "tra classi senza attributi"
    ],
    "correct_answer": "tra istanze della stessa classe",
    "id": "80961a31-4499-4940-8215-83d79426cca8"
  },
  {
    "question": "Un sistema software è affidabile",
    "answers": [
      "quando non ci sono bug minori",
      "se non si manifestano malfunzionamenti",
      "quando è facile da mantenere",
      "solo se ha superato tutti i test unitari"
    ],
    "correct_answer": "se non si manifestano malfunzionamenti",
    "id": "972d5d93-273b-4395-b21c-a41d92bec8ec"
  },
  {
    "question": "In quale scenario è più utile il pattern State?",
    "answers": [
      "Quando un oggetto cambia comportamento in base al suo stato",
      "Quando si vuole creare oggetti immutabili",
      "Per gestire eccezioni in un metodo",
      "Quando un oggetto necessita di un comportamento diverso a seconda del suo stato attuale"
    ],
    "correct_answer": "Quando un oggetto necessita di un comportamento diverso a seconda del suo stato attuale",
    "id": "a0c7cdf9-1b35-4e44-b57b-a184763879fb"
  },
  {
    "question": "L' acronimo UML sta per:",
    "answers": [
      "Universal Modeling Language",
      "Unified Methodology Language",
      "Unified Modeling Language",
      "Ultimate Modeling Language"
    ],
    "correct_answer": "Unified Modeling Language",
    "id": "74da3815-f435-4ecd-8c3f-b17faf4fc58f"
  },
  {
    "question": "E' opportuno definire un diagramma di attività con partizioni quando si ha bisogno di:",
    "answers": [
      "rappresentare in modo esplicito chi svolge quale attività",
      "semplificare il diagramma riducendo le attività",
      "mostrare la sequenza temporale delle attività",
      "raggruppare attività per importanza"
    ],
    "correct_answer": "rappresentare in modo esplicito chi svolge quale attività",
    "id": "e1cfacfc-7e79-489b-b3c6-44ef3892a4b1"
  }
,  
  {
    "question": "Dire se la seguente affermazione è vera o falsa: \"Eseguire una auto-transizione significa sempre eseguire solo l' attività ad essa associata\":",
    "answers": [
      "non è detto sia vero, se lo stato definisce attività di ingresso e uscita queste sarebbe eseguite",
      "significa che non viene eseguita nessuna attività",
      "significa che l'attività viene eseguita due volte",
      "è sempre falso, le auto-transizioni non eseguono attività"
    ],
    "correct_answer": "non è detto sia vero, se lo stato definisce attività di ingresso e uscita queste sarebbe eseguite",
    "id": "047e410f-b99c-47cf-9c24-f4aebcb5825a"
  },
  {
    "question": "Lo pseudo stato finale server per:",
    "answers": [
      "definire il completamento dell' esecuzione della macchina a stati, ma solitamente non è un \u001c vero\u001d  stato",
      "rappresentare l'inizio di una macchina a stati",
      "indicare un errore nello stato corrente",
      "definire una transizione condizionale"
    ],
    "correct_answer": "definire il completamento dell' esecuzione della macchina a stati, ma solitamente non è un \u001c vero\u001d  stato",
    "id": "f68b4d3f-fdfe-44c6-afd6-06c1e6f0e27b"
  },
  {
    "question": "Se occorre inserire una classe e nella gerarchia non esiste una classe di cui essa è una specializzazione:",
    "answers": [
      "si definisce una classe da zero e non si usa l'ereditarietà lasciando la gerarchia inalterata",
      "si sceglie una classe casuale come genitore",
      "si elimina l'intera gerarchia e la ricostruisce",
      "si trasforma la classe in un'interfaccia"
    ],
    "correct_answer": "si definisce una classe da zero e non si usa l'ereditarietà lasciando la gerarchia inalterata",
    "id": "03ac38fe-ebef-40bd-ae8c-b4b35c32d0d5"
  },
  {
    "question": "In object-oriented, il polimorfismo",
    "answers": [
      "insieme al binding dinamico permette di chiamare l'operazione sulla sottoclasse effettivamente istanziata",
      "consente di cambiare il tipo di una variabile a runtime",
      "impedisce la modifica dei metodi ereditati",
      "è la possibilità di creare più copie di un oggetto"
    ],
    "correct_answer": "insieme al binding dinamico permette di chiamare l'operazione sulla sottoclasse effettivamente istanziata",
    "id": "5f45ca90-ee87-476e-8ca3-c6255bdc170f"
  }
,
  {
    "question": "Le tipologie di prototipi usa e getta si definiscono",
    "answers": [
      "Mock-ups e breadboards",
      "Prototipi incrementali",
      "Prototipi evolutivi",
      "Prototipi funzionali"
    ],
    "correct_answer": "Mock-ups e breadboards",
    "id": "a2e6cb34-da0d-4f62-8703-980932e712dc"
  },
  {
    "question": "Quale delle seguenti affermazioni è vera riguardo al pattern Composite?",
    "answers": [
      "Permette la creazione di strutture gerarchiche di oggetti",
      "Serve a isolare le interfacce dai dettagli di implementazione",
      "Consente l'esecuzione asincrona dei metodi",
      "Viene usato per creare copie indipendenti di un oggetto"
    ],
    "correct_answer": "Permette la creazione di strutture gerarchiche di oggetti",
    "id": "06bd7b75-6c9f-4af3-8300-cf006b53c30c"
  },
  {
    "question": "Qual è il principale vantaggio della comunicazione sincrona faccia-a-faccia?",
    "answers": [
      "economicità e rapidità",
      "Riduce la complessità del codice",
      "Permette di memorizzare tutte le informazioni automaticamente",
      "Elimina la necessità di documentazione"
    ],
    "correct_answer": "economicità e rapidità",
    "id": "9b9fa2d1-159c-4597-bb61-59924769bed9"
  },
  {
    "question": "Cosa stamperà questo ciclo?     for(int i = 0; i < 3; i++) {        System.out.println(i);    }",
    "answers": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "Errore di compilazione"
    ],
    "correct_answer": "0 1 2",
    "id": "4add7c46-d325-4f1e-8477-033fdc104feb"
  },
  {
    "question": "Che cos'è l'ereditarietà in Java?",
    "answers": [
      "Il processo di riutilizzare il codice da classi esistenti",
      "La creazione di variabili locali temporanee",
      "La definizione di interfacce multiple",
      "L'uso di costruttori privati"
    ],
    "correct_answer": "Il processo di riutilizzare il codice da classi esistenti",
    "id": "755864f5-2579-4854-a6af-2a4fd55a480b"
  },
  {
    "question": "Quale ruolo ha la classe \"foglia\" nel pattern Composite?",
    "answers": [
      "Rappresenta oggetti singoli che non contengono sotto-elementi",
      "Rappresenta nodi interni che contengono figli",
      "Permette di duplicare la struttura dell'albero",
      "Serve solo come interfaccia"
    ],
    "correct_answer": "Rappresenta oggetti singoli che non contengono sotto-elementi",
    "id": "b1f95b74-5900-4935-bb3d-cb8d1b5c78f2"
  },
  {
    "question": "Quale parola chiave è usata per definire una variabile costante in Java?",
    "answers": [
      "final",
      "const",
      "immutable",
      "static final"
    ],
    "correct_answer": "final",
    "id": "dd865024-32ee-4e59-b844-baf85fce8e7a"
  },
  {
    "question": "Cosa stampa questo codice Java?     int x = 5;    int y = x++;",
    "answers": [
      "5",
      "6",
      "Errore di compilazione",
      "0"
    ],
    "correct_answer": "5",
    "id": "0c352970-f157-454b-b725-fdaf860320dd"
  }
,
  {
    "question": "Qual è il valore predefinito di una variabile booleana in Java?",
    "answers": [
      "false",
      "true",
      "0",
      "null"
    ],
    "correct_answer": "false",
    "id": "7da0206f-0c2f-4588-9277-8f7f51022b34"
  },
  {
    "question": "Individua l'errore in questo codice:     for(int i = 0; i <= 5; i++) {        System.out.println(i);    }    System.out.println(i);",
    "answers": [
      "Variabile i non accessibile fuori dal ciclo",
      "Ciclo infinito",
      "Errore di divisione per zero",
      "Manca un punto e virgola nel ciclo"
    ],
    "correct_answer": "Variabile i non accessibile fuori dal ciclo",
    "id": "9f453944-ee13-487d-b239-906ea1fe4599"
  },
  {
    "question": "Determina l'output:     SET num = 8    IF num MOD 2 = 0    THEN PRINT \"Pari\"    ELSE PRINT \"Dispari\"",
    "answers": [
      "Pari",
      "Dispari",
      "8",
      "0"
    ],
    "correct_answer": "Pari",
    "id": "ce3f842c-3497-4d31-86dd-ab388f29565c"
  },
  {
    "question": "Nei diagrammi di attività, i nodi segnale di invio si rappresentano con:",
    "answers": [
      "un rettangolo con una punta sul lato destro",
      "un cerchio pieno",
      "un rombo",
      "un triangolo"
    ],
    "correct_answer": "un rettangolo con una punta sul lato destro",
    "id": "bc25c9c6-cbe7-4f92-9ef5-4c09034336ae"
  },
  {
    "question": "Quale tra le seguenti molteplicità di un'associazione riferita alle classi NON è lecita:",
    "answers": [
      "1,3",
      "0..1",
      "1..*",
      "0..*"
    ],
    "correct_answer": "1,3",
    "id": "167e5b17-6125-4e70-ba79-b7847c7dcec5"
  },
  {
    "question": "Secondo le convenzioni di Java gli identficatori delle variabili",
    "answers": [
      "devono iniziare per lettera minuscola",
      "devono iniziare per lettera maiuscola",
      "possono contenere spazi",
      "devono iniziare con un numero"
    ],
    "correct_answer": "devono iniziare per lettera minuscola",
    "id": "6b068764-ffc7-41bc-b172-2c0b989ded8e"
  },
  {
    "question": "Quale affermazione NON è corretta per un diagramma di caso d'uso:",
    "answers": [
      "si interessa della implementazione e dei problemi funzionali durante l'uso del sistema",
      "Rappresenta gli attori che interagiscono con il sistema",
      "Mostra le funzionalità offerte dal sistema",
      "Evidenzia i casi d'uso principali"
    ],
    "correct_answer": "si interessa della implementazione e dei problemi funzionali durante l'uso del sistema",
    "id": "ebbbacd6-007a-4743-b4b3-1bce27d898ea"
  },
  {
    "question": "Qual è l'output di questo codice?     int x = 1;    while(x < 4) {        System.out.println(x);        x++;    }",
    "answers": [
      "1 2 3",
      "1 2 3 4",
      "0 1 2 3",
      "Errore di compilazione"
    ],
    "correct_answer": "1 2 3",
    "id": "040adad3-d832-4a36-94d7-b3550125f27c"
  }
,
 
  {
    "question": "Che cos'è il polimorfismo in Java?",
    "answers": [
      "La capacità di un oggetto di assumere molte forme",
      "La possibilità di creare più classi con lo stesso nome",
      "Un tipo di ciclo iterativo",
      "Una struttura dati"
    ],
    "correct_answer": "La capacità di un oggetto di assumere molte forme",
    "id": "795e5a42-fede-44fe-b048-7da11f50cd20"
  },
  {
    "question": "La figura di risk manager ha il compito",
    "answers": [
      "di individuare e minimizzare i rischi",
      "di implementare il software",
      "di gestire le riunioni del team",
      "di creare diagrammi UML"
    ],
    "correct_answer": "di individuare e minimizzare i rischi",
    "id": "8f6c61ac-b1df-4719-b18f-8135f74e2026"
  },
  {
    "question": "I diversi tipi di visibilità per gli attributi nel diagramma delle classi sono:",
    "answers": [
      "pubblico, protetto, privato",
      "interno, esterno, globale",
      "statico, dinamico, locale",
      "pubblico, privato, globale"
    ],
    "correct_answer": "pubblico, protetto, privato",
    "id": "3a424d1e-2b30-4ea4-a7e4-f97d6fdc2902"
  },
  {
    "question": "Il diagramma di attività:",
    "answers": [
      "modella un comportamento come una sequenza di azioni",
      "mostra la struttura delle classi",
      "rappresenta solo gli attori esterni",
      "definisce le relazioni tra pacchetti"
    ],
    "correct_answer": "modella un comportamento come una sequenza di azioni",
    "id": "d22630d6-2e2d-4246-9106-76754c74e292"
  },
  {
    "question": "Individua l'errore in questo codice:     int[] nums = new int[2];    nums[0] = 1;    nums[1] = 2;    nums[2] = 3;",
    "answers": [
      "Indice fuori dai limiti dell'array",
      "Errore di sintassi",
      "Variabile non inizializzata",
      "Ciclo infinito"
    ],
    "correct_answer": "Indice fuori dai limiti dell'array",
    "id": "659c29d6-4a84-458b-b7d7-614cf598b552"
  },
  {
    "question": "L' acronimo OCL nel contesto UML significa:",
    "answers": [
      "Object Constraint Language",
      "Object Control Layer",
      "Operational Class Logic",
      "Overall Class Language"
    ],
    "correct_answer": "Object Constraint Language",
    "id": "1b52ff49-1107-4e2b-ac98-c6037cc5fc34"
  },
  {
    "question": "Nei diagrammi di macchina a stati, uno pseudostato iniziale:",
    "answers": [
      "Un disco pieno",
      "Un rombo vuoto",
      "Un triangolo con punta verso l'alto",
      "Un rettangolo con bordo tratteggiato"
    ],
    "correct_answer": "Un disco pieno",
    "id": "b1a99ddb-35d9-4167-acb6-5e582e806c0b"
  },
  {
    "question": "Qual è il ruolo del \"minute taker\" durante un meeting?",
    "answers": [
      "verbalizzare i punti discussi",
      "gestire le decisioni strategiche",
      "moderare il tempo di intervento",
      "preparare la presentazione"
    ],
    "correct_answer": "verbalizzare i punti discussi",
    "id": "d7f3c82e-ddd9-41fe-8590-95ce903c470b"
  }
,
  
  {
    "question": "In Java, è possibile usare il costrutto for per i cicli infiniti",
    "answers": [
      "sì sempre anche se è meno chiaro e lineare",
      "no, mai",
      "solo con variabili globali",
      "solo con cicli annidati"
    ],
    "correct_answer": "sì sempre anche se è meno chiaro e lineare",
    "id": "22293782-879b-4ff6-b723-19cef5ba420d"
  },
  {
    "question": "Nel modello a sviluppo incrementale, la parte iterativa riguarda le fasi:",
    "answers": [
      "dallo sviluppo dell'incremento alla convalida",
      "solo la fase di analisi dei requisiti",
      "solo la fase di progettazione",
      "solo la fase di test finale"
    ],
    "correct_answer": "dallo sviluppo dell'incremento alla convalida",
    "id": "8127f763-355d-4a9e-9613-04cb91cc48cd"
  },
  {
    "question": "La rappresentazione della \"linea di vita\" si trova nei:",
    "answers": [
      "diagrammi di sequenza",
      "diagrammi di attività",
      "diagrammi delle classi",
      "diagrammi dei pacchetti"
    ],
    "correct_answer": "diagrammi di sequenza",
    "id": "433850e4-fc86-402b-b8b7-fa41de8edd6a"
  },
  {
    "question": "In Java un metodo definisce",
    "answers": [
      "una funzionalità della classe di oggetti",
      "una variabile globale",
      "un tipo di dato",
      "un pacchetto di libreria"
    ],
    "correct_answer": "una funzionalità della classe di oggetti",
    "id": "447b965e-9aef-49a2-8e55-de694d73b340"
  },
  {
    "question": "In Java, come dovrebbero essere scritti i nomi delle classi?",
    "answers": [
      "PascalCase",
      "camelCase",
      "snake_case",
      "kebab-case"
    ],
    "correct_answer": "PascalCase",
    "id": "280f8a4b-1262-412c-b73e-fe26020bbc70"
  },
  {
    "question": "Quale componente di Java è responsabile dell'esecuzione del bytecode Java compilato?",
    "answers": [
      "JVM",
      "JDK",
      "JRE",
      "JIT"
    ],
    "correct_answer": "JVM",
    "id": "10921183-cf90-47af-ae26-8e0ea4b49628"
  },
  {
    "question": "Quale dei seguenti non è un concetto di programmazione orientata agli oggetti (OOP) in Java?",
    "answers": [
      "Compilazione",
      "Ereditarietà",
      "Polimorfismo",
      "Incapsulamento"
    ],
    "correct_answer": "Compilazione",
    "id": "b66f2425-a43f-4821-af9b-92e11d9e3eeb"
  }
,
  
  {
    "question": "Che cos'è la sovrascrittura di metodo in Java?",
    "answers": [
      "Fornire un'implementazione diversa per un metodo ereditato in una sottoclasse.",
      "Definire un nuovo metodo con lo stesso nome ma parametri diversi",
      "Creare una classe senza metodi",
      "Usare metodi statici per tutte le funzioni"
    ],
    "correct_answer": "Fornire un'implementazione diversa per un metodo ereditato in una sottoclasse.",
    "id": "974d7c11-665d-4076-89b4-2d91ace97cc7"
  },
  {
    "question": "Quando viene determinato l'overloading di metodo?",
    "answers": [
      "A tempo di compilazione",
      "A tempo di esecuzione",
      "Durante la progettazione UML",
      "Mai, non è rilevante in Java"
    ],
    "correct_answer": "A tempo di compilazione",
    "id": "de589fbe-5804-4799-9fcd-a94682b9b4ab"
  },
  {
    "question": "Quale struttura di controllo viene utilizzata per eseguire un blocco di codice più volte?",
    "answers": [
      "for",
      "if",
      "switch",
      "try-catch"
    ],
    "correct_answer": "for",
    "id": "77a0de5a-655c-4c71-a9cd-b12f89241440"
  },
  {
    "question": "Quale di queste non è una caratteristica di Java?",
    "answers": [
      "Linguaggio interpretato",
      "Orientato agli oggetti",
      "Portabile",
      "Sicuro"
    ],
    "correct_answer": "Linguaggio interpretato",
    "id": "9e9a4b84-c3e2-47e3-974d-694a677ff442"
  },
  {
    "question": "Quale dei seguenti è un tipo di polimorfismo in Java?",
    "answers": [
      "Polimorfismo a tempo di compilazione",
      "Ereditarietà multipla",
      "Incapsulamento",
      "Overriding privato"
    ],
    "correct_answer": "Polimorfismo a tempo di compilazione",
    "id": "6011be05-781f-421f-bfad-bb5b52490f25"
  },
  {
    "question": "Qual è la differenza tra una classe astratta e un'interfaccia?",
    "answers": [
      "Una classe astratta può avere costruttori, un'interfaccia no",
      "Un'interfaccia può avere variabili istanza, una classe astratta no",
      "Una classe astratta non può avere metodi astratti",
      "Un'interfaccia può estendere una classe astratta"
    ],
    "correct_answer": "Una classe astratta può avere costruttori, un'interfaccia no",
    "id": "95216e3c-bfb9-4a6a-88ad-b650f392f992"
  },
  {
    "question": "Nei diagrammi di attività:",
    "answers": [
      "il focus è sull'attività e non su chi la svolge",
      "si descrive solo la struttura delle classi",
      "si indicano esclusivamente le interfacce",
      "si rappresentano solo i pacchetti"
    ],
    "correct_answer": "il focus è sull'attività e non su chi la svolge",
    "id": "90a8f5ce-0141-49b2-aeda-99e0471b3dff"
  }
,
  {
    "question": "Che cos'è l'incapsulamento in Java?",
    "answers": [
      "Il processo di combinare dati e metodi in un'unica unità",
      "Separare dati e metodi in classi diverse",
      "Utilizzare solo metodi statici",
      "Evitare l'ereditarietà tra classi"
    ],
    "correct_answer": "Il processo di combinare dati e metodi in un'unica unità",
    "id": "43a1a57c-8931-413c-8f95-74d141549a5b"
  },
  {
    "question": "Quale dei seguenti non è un vantaggio dell'uso dell'Iterator?",
    "answers": [
      "Permette di eseguire operazioni parallele sui dati della collezione",
      "Iterare senza conoscere la struttura interna della collezione",
      "Fornire un accesso sequenziale agli elementi",
      "Riutilizzo del codice"
    ],
    "correct_answer": "Permette di eseguire operazioni parallele sui dati della collezione",
    "id": "1d856fdd-aff0-47bd-9863-ea4f663637b0"
  },
  {
    "question": "Un simbolo di parallelepipedo può usarsi per:",
    "answers": [
      "un diagramma di deployment",
      "un diagramma di sequenza",
      "un diagramma di attività",
      "un diagramma dei casi d'uso"
    ],
    "correct_answer": "un diagramma di deployment",
    "id": "e2d0ee17-83db-4200-b82f-8764cf6f0d3d"
  },
  {
    "question": "Nell'adozione e applicazione del ciclo di vita del software detto Waterfall, quale delle seguenti controindicazioni non è pertinente:",
    "answers": [
      "non è facilmente comprensibile ed applicabile",
      "Mancanza di documentazione",
      "Difficoltà nell'adattarsi ai cambiamenti",
      "Scarsa pianificazione"
    ],
    "correct_answer": "non è facilmente comprensibile ed applicabile",
    "id": "e609685f-984a-46a0-bb9d-b16c679ad744"
  },
  {
    "question": "Nel diagramma di sequenza, nel caso di messaggio sincrono:",
    "answers": [
      "l'oggetto che invia il messaggio attende la risposta dall'oggetto interpellato, interrompendo la propria esecuzione. Un messaggio sincrono è rappresentato con una freccia con la punta piena.",
      "Il messaggio viene ignorato dall'oggetto destinatario",
      "L'oggetto invia il messaggio e continua senza attendere",
      "Il messaggio è rappresentato da una linea tratteggiata"
    ],
    "correct_answer": "l'oggetto che invia il messaggio attende la risposta dall'oggetto interpellato, interrompendo la propria esecuzione. Un messaggio sincrono è rappresentato con una freccia con la punta piena.",
    "id": "d69daac6-e68e-4ebd-8d46-e17a4d526df8"
  },
  {
    "question": "Qual è la differenza tra sovraccarico di metodo e sovrascrittura di metodo in Java?",
    "answers": [
      "Tutte le risposte sopra.",
      "L'overloading cambia i parametri del metodo, l'overriding cambia l'implementazione nella sottoclasse",
      "L'overloading avviene a compilazione, l'overriding a runtime",
      "L'overriding richiede ereditarietà, l'overloading no"
    ],
    "correct_answer": "Tutte le risposte sopra.",
    "id": "25edf946-a205-4ed9-af1e-2dab8eeb08bc"
  },
 
  {
    "question": "Qual è lo scopo principale del pattern Iterator?",
    "answers": [
      "Fornire un modo per accedere agli elementi di una collezione senza esporne la struttura interna",
      "Permettere l'iterazione di oggetti in ordine arbitrario",
      "Separare l'interfaccia di una collezione dalla sua implementazione",
      "Ridurre il consumo di memoria durante l'accesso agli elementi"
    ],
    "correct_answer": "Fornire un modo per accedere agli elementi di una collezione senza esporne la struttura interna",
    "id": "49e03d66-8cf7-4761-b22e-e14d30dcb108"
  },
  {
    "question": "Una classe astratta può avere metodi non astratti?",
    "answers": [
      "Si",
      "No, tutti i metodi devono essere astratti",
      "Solo se la classe implementa un'interfaccia",
      "Solo se contiene una sola operazione astratta"
    ],
    "correct_answer": "Si",
    "id": "5de01af0-38fb-4b42-bf25-d8729a159dae"
  },
  {
    "question": "Il diagramma delle classi:",
    "answers": [
      "descrive il tipo degli oggetti",
      "mostra le sequenze di messaggi tra oggetti",
      "indica lo stato degli oggetti nel tempo",
      "rappresenta l'esecuzione delle attività di un processo"
    ],
    "correct_answer": "descrive il tipo degli oggetti",
    "id": "735a0f81-8484-4e07-aacc-30fac9aefef1"
  },
  {
    "question": "Una classe astratta è:",
    "answers": [
      "una classe che ha una o più operazioni astratte, ovvero con sola dichiarazione e senza implementazione e quindi non può essere direttamente istanziata.",
      "una classe che può essere istanziata ma non estesa",
      "una classe che contiene solo costanti statiche",
      "una classe che implementa automaticamente tutte le interfacce"
    ],
    "correct_answer": "una classe che ha una o più operazioni astratte, ovvero con sola dichiarazione e senza implementazione e quindi non può essere direttamente istanziata.",
    "id": "b21889cc-37ad-4640-8bed-2431afa662bf"
  },
  {
    "question": "Qual è lo scopo della parola chiave this in Java?",
    "answers": [
      "Fare riferimento all'oggetto corrente",
      "Accedere a variabili locali con lo stesso nome dei campi",
      "Richiamare il costruttore della classe padre",
      "Creare una nuova istanza dell'oggetto corrente"
    ],
    "correct_answer": "Fare riferimento all'oggetto corrente",
    "id": "8054e19d-6c9a-43b8-aa46-d774ff6fcf9e"
  },
  {
    "question": "In Java, se abbiamo int i=5; int j=++i; int k=j++; int h=k--; boolean flag = ((i != j) && ((j ...",
    "answers": [
      "true",
      "false",
      "L'espressione genera errore di compilazione",
      "Dipende dal compilatore"
    ],
    "correct_answer": "true",
    "id": "c036ac56-690a-4227-be86-261ff49b8e27"
  },
  {
    "question": "Quale sarà l'output di questo codice? int a = 10; int b = 20; System.out.println(a + b);",
    "answers": [
      "30",
      "10 20",
      "1020",
      "Errore di compilazione"
    ],
    "correct_answer": "30",
    "id": "d3c39237-faa2-4f71-a8af-a265bfcbc531"
  },
  {
    "question": "Qual è lo scopo dell'incapsulamento in Java?",
    "answers": [
      "Proteggere l'integrità dei dati",
      "Consentire l'ereditarietà multipla",
      "Separare l'interfaccia dall'implementazione",
      "Ridurre il numero di classi necessarie"
    ],
    "correct_answer": "Proteggere l'integrità dei dati",
    "id": "57d5cf74-b256-42ea-aca9-31000d2378cb"
  },
  {
    "question": "Nei diagrammi di attività, i nodi segnale di ricezione si rappresentano con:",
    "answers": [
      "un rettangolo con una punta rientrante sul lato sinistro",
      "un cerchio con un'onda interna",
      "un parallelogramma inclinato verso destra",
      "un rombo con un'icona di messaggio"
    ],
    "correct_answer": "un rettangolo con una punta rientrante sul lato sinistro",
    "id": "54257aa3-8ced-485a-aa5e-58b9b03a8d82"
  },
  {
    "question": "In un diagramma delle classi eventuali vincoli o metodi:",
    "answers": [
      "possono comparire usando le annotazioni",
      "non possono essere visualizzati",
      "devono essere mostrati come note separate",
      "devono sempre essere implementati come metodi astratti"
    ],
    "correct_answer": "possono comparire usando le annotazioni",
    "id": "419565a8-37fd-4166-9354-029a3953fdd9"
  }
,
  {
    "question": "Qual è lo scopo della parola chiave \"final\" in Java?",
    "answers": [
      "Impedire l'ereditarietà di una classe",
      "Dichiarare costanti",
      "Bloccare l'override di un metodo",
      "Tutte le risposte sopra"
    ],
    "correct_answer": "Tutte le risposte sopra",
    "id": "a92fb73b-fba1-45b6-9340-12b6aa73caa2"
  },
  {
    "question": "Per identificare le classi in fase di progettazione si considera",
    "answers": [
      "il contesto del problema da risolvere per avere classi con una semantica (attributi ed operazioni) coerente ad esso",
      "le funzionalità fornite dagli utenti",
      "la complessità algoritmica delle operazioni",
      "il numero di sviluppatori disponibili"
    ],
    "correct_answer": "il contesto del problema da risolvere per avere classi con una semantica (attributi ed operazioni) coerente ad esso",
    "id": "24eaf3cb-1ef4-4374-a7c1-c2f691fd34a0"
  },
  {
    "question": "Definire un'attività interna di risposta a un evento significa:",
    "answers": [
      "voler rispondere all'evento senza definire una transizione di stato",
      "creare un nuovo stato dell'oggetto",
      "richiamare un metodo asincrono di un'altra classe",
      "annotare l'evento senza implementarlo"
    ],
    "correct_answer": "voler rispondere all'evento senza definire una transizione di stato",
    "id": "8bdfb0c0-dc24-4e14-af80-9956dd603bbd"
  },
  {
    "question": "E' possibile rappresentare solo la parte iniziale e finale di un arco per evitare di complicare eccessivamente un diagramma:",
    "answers": [
      "Vero, usando i connettori",
      "Falso, tutti gli archi devono essere disegnati completamente",
      "Solo se il diagramma è di sequenza",
      "Solo per i diagrammi di stato"
    ],
    "correct_answer": "Vero, usando i connettori",
    "id": "2d24dd5e-f493-4423-8a38-c430dbef0b38"
  },
  {
    "question": "Secondo le convenzioni di Java gli identificatori della classe",
    "answers": [
      "devono iniziare per lettera maiuscola",
      "devono iniziare con un underscore",
      "devono essere tutti in minuscolo",
      "possono iniziare con un numero"
    ],
    "correct_answer": "devono iniziare per lettera maiuscola",
    "id": "06dce590-419e-48db-a6bb-4db006dea0bd"
  },
  {
    "question": "Specificare qual è la differenza tra aggregazione e composizione:",
    "answers": [
      "l'aggregazione non implica che il contenuto appartenga a un solo contenitore, mentre la composizione sì",
      "l'aggregazione e la composizione sono equivalenti",
      "la composizione permette oggetti condivisi tra più contenitori",
      "l'aggregazione è più restrittiva della composizione"
    ],
    "correct_answer": "l'aggregazione non implica che il contenuto appartenga a un solo contenitore, mentre la composizione sì",
    "id": "6ef5fbe5-3d92-4817-93c9-abddc3065056"
  },
  {
    "question": "In Java, quando passiamo una reference di un oggetto in input ad un metodo, siamo sicuri che terminata l'esecuzione del metodo, il reference",
    "answers": [
      "punta allo stesso oggetto a cui puntava prima dell'esecuzione del metodo",
      "viene automaticamente copiato in un nuovo oggetto",
      "diventa null",
      "crea una copia indipendente dell'oggetto"
    ],
    "correct_answer": "punta allo stesso oggetto a cui puntava prima dell'esecuzione del metodo",
    "id": "769c4868-1e82-4c48-a51a-4c67871da062"
  },
  {
    "question": "Una classe è una specifica di:",
    "answers": [
      "di una categoria di oggetti",
      "di una singola istanza di oggetto",
      "di una funzione del software",
      "di un pacchetto di moduli"
    ],
    "correct_answer": "di una categoria di oggetti",
    "id": "21816cc5-9c6b-4ccc-bfe5-9058ea67eb17"
  },
  {
    "question": "Per definizione, l'Ingegneria del software copre i seguenti aspetti:",
    "answers": [
      "progetto, implementazione, collaudo e documentazione del software",
      "solo la scrittura del codice",
      "la gestione dei database",
      "la manutenzione hardware del sistema"
    ],
    "correct_answer": "progetto, implementazione, collaudo e documentazione del software",
    "id": "256d013d-a3cb-4e1e-9957-4fae50ffba16"
  },
  {
    "question": "Gli eventi di comunicazione pianificati sono",
    "answers": [
      "eventi previsti e coordinati nel sistema per sincronizzare le interazioni",
      "messaggi inviati senza attendere risposta",
      "segnalazioni generate casualmente dal sistema",
      "azioni interne a un oggetto senza effetto esterno"
    ],
    "correct_answer": "eventi previsti e coordinati nel sistema per sincronizzare le interazioni",
    "id": "cc81e29f-daaa-407a-bb70-4b25ffcfdc69"
  }
,
 
  {
    "question": "Una fork introduce un flusso di esecuzione alternativo:",
    "answers": [
      "No, non è vero, una fork introduce flussi d'esecuzione concorrenti",
      "Crea un unico percorso sequenziale",
      "Serve solo per dichiarare variabili locali",
      "Sincronizza tutti i thread esistenti"
    ],
    "correct_answer": "No, non è vero, una fork introduce flussi d'esecuzione concorrenti",
    "id": "72784332-37cc-4f87-97e3-e0b2b33a2c05"
  },
  {
    "question": "Analizza questo pseudocodice: SET num = 0 WHILE num <= 5 IF num MOD 2 = 0 THEN PRINT num END IF INCREMENT num",
    "answers": [
      "0 2 4",
      "1 3 5",
      "0 1 2 3 4 5",
      "Solo 0 e 5"
    ],
    "correct_answer": "0 2 4",
    "id": "1368252d-5485-4077-815c-40fa344fa31d"
  },
  {
    "question": "Qual è il ruolo di un costruttore in una classe Java?",
    "answers": [
      "Inizializzare lo stato dell'oggetto",
      "Richiamare altri metodi della classe",
      "Eseguire il garbage collection",
      "Modificare i tipi di dati dei membri"
    ],
    "correct_answer": "Inizializzare lo stato dell'oggetto",
    "id": "a225de30-b49b-4a61-8c69-e39044bfbede"
  },
  {
    "question": "Nei diagrammi di macchina a stati, uno stato è rappresentato da:",
    "answers": [
      "Un rettangolo arrotondato",
      "Un cerchio pieno",
      "Un diamante",
      "Un quadrato"
    ],
    "correct_answer": "Un rettangolo arrotondato",
    "id": "2ce294ae-be66-4323-b86a-594183a1d42a"
  },
  {
    "question": "Quale tipo di dato è più adatto per memorizzare l'età di una persona in Java?",
    "answers": [
      "int",
      "double",
      "boolean",
      "String"
    ],
    "correct_answer": "int",
    "id": "d1a2ce47-39de-408e-807f-f96f2df0d377"
  },
  {
    "question": "Quale modificatore di accesso limita l'accesso a un membro della classe alla sola classe stessa?",
    "answers": [
      "private",
      "public",
      "protected",
      "default"
    ],
    "correct_answer": "private",
    "id": "bec84993-3435-4043-bf8d-b8bc8917af85"
  },
  {
    "question": "In UML gli stati sono rappresentati con:",
    "answers": [
      "Rettangoli con angoli arrotondati",
      "Cerchi",
      "Rettangoli semplici",
      "Diamanti"
    ],
    "correct_answer": "Rettangoli con angoli arrotondati",
    "id": "0499c4c5-bde2-431a-8b1f-77a8d5ba6330"
  },
  {
    "question": "Cosa rappresenta il “percorso critico” in un diagramma PERT?",
    "answers": [
      "Il percorso più lungo nel grafo dei task",
      "Il task con maggiore complessità",
      "Il primo task da completare",
      "Il task con maggiori risorse allocate"
    ],
    "correct_answer": "Il percorso più lungo nel grafo dei task",
    "id": "45a504a0-cc08-4d3c-93a9-d0ff6d88610a"
  }
,
  {
    "question": "In Java una volta scritti i file con la dichiarazione delle classi di oggetti",
    "answers": [
      "Il programma non compila perché manca il main con il flusso di esecuzione",
      "I file devono essere compilati con il compilatore Java",
      "Le classi possono essere utilizzate in altri programmi tramite import",
      "Ogni classe deve avere almeno un costruttore"
    ],
    "correct_answer": "Il programma non compila perché manca il main con il flusso di esecuzione",
    "id": "8788b29b-4135-4975-a768-0bfccdb1becc"
  },
  {
    "question": "Quale di queste interfacce è tipicamente implementata da un iteratore in Java?",
    "answers": [
      "Iterator",
      "Iterable",
      "Collection",
      "ListIterator"
    ],
    "correct_answer": "Iterator",
    "id": "9ee94207-ddaf-422c-8e9f-7b5268f4ef6b"
  },
  {
    "question": "Quale parola chiave viene usata per uscire da un ciclo prematuramente in Java?",
    "answers": [
      "break",
      "continue",
      "return",
      "throw"
    ],
    "correct_answer": "break",
    "id": "f8f37a5a-8456-4a24-8673-4a23e0a399a0"
  },
  {
    "question": "Quale di questi è un commento a singola linea in Java?",
    "answers": [
      "// commento",
      "# commento",
      "-- commento",
      "/* commento */"
    ],
    "correct_answer": "// commento",
    "id": "a55f925f-6453-4822-a4d9-1b51ea29b205"
  },
  {
    "question": "Valuta questo pseudocodice: SET a = 3 SET b = 4 PRINT a * b",
    "answers": [
      "12",
      "7",
      "34",
      "Errore di sintassi"
    ],
    "correct_answer": "12",
    "id": "42c8fd3a-8432-4792-8eb3-b8f09dbaaf64"
  }
,
  {
    "question": "Una classe astratta si definisce:",
    "answers": [
      "Interfaccia, se è una classe senza attributi e con tutte le operazioni astratte",
      "Classe che non può essere istanziata direttamente",
      "Classe con almeno un metodo astratto",
      "Classe che può avere metodi concreti e astratti"
    ],
    "correct_answer": "Interfaccia, se è una classe senza attributi e con tutte le operazioni astratte",
    "id": "1fa74150-dad1-45dd-b105-6dfe66b57fa4"
  },
  {
    "question": "Trova l'errore in questo codice: int i = 0; while(i < 10) { i++; } System.out.println(i);",
    "answers": [
      "Nessun errore",
      "Manca la chiusura della parentesi graffa",
      "La variabile i non è stata dichiarata",
      "Il ciclo while non termina mai"
    ],
    "correct_answer": "Nessun errore",
    "id": "0cb573ea-430d-493f-be43-8a1ac5e28953"
  },
  {
    "question": "Qual è la funzione principale del liaison in una struttura di comunicazione?",
    "answers": [
      "Trasferire informazioni tra sviluppatori",
      "Coordinare il flusso dei dati tra sistemi",
      "Gestire conflitti tra membri del team",
      "Assicurare la corretta documentazione dei messaggi"
    ],
    "correct_answer": "Trasferire informazioni tra sviluppatori",
    "id": "fbcc6af9-0f01-490c-8bc1-ffcf8ecf8065"
  },
  {
    "question": "In Java nella dichiarazione di classe il modificatore specifica",
    "answers": [
      "Come modificare le caratteristiche della classe",
      "Il livello di accesso ai membri della classe",
      "Se la classe può essere ereditata",
      "Se la classe è astratta o finale"
    ],
    "correct_answer": "Come modificare le caratteristiche della classe",
    "id": "d6976104-e805-4419-92eb-e04a8939b3bd"
  },
  {
    "question": "Qual è l'output di questo pseudocodice? SET count = 5 DO PRINT count COUNTDOWN count",
    "answers": [
      "5 4 3 2 1",
      "5 4 3 2 1 0",
      "Errore di sintassi",
      "Solo 5"
    ],
    "correct_answer": "5 4 3 2 1",
    "id": "e1607795-7e70-4195-ab87-8afb818f323f"
  },
  {
    "question": "Quale caratteristica di Java permette di eseguire un programma Java su diverse piattaforme?",
    "answers": [
      "Indipendente dalla piattaforma",
      "Portabilità del bytecode",
      "Compilazione cross-platform",
      "Esecuzione tramite JVM"
    ],
    "correct_answer": "Indipendente dalla piattaforma",
    "id": "2fb494fb-9084-496a-b067-920121210d36"
  },
  {
    "question": "Qual è il risultato di questa operazione in Java: (int)(7.9)?",
    "answers": [
      "7",
      "8",
      "7.9",
      "Errore di compilazione"
    ],
    "correct_answer": "7",
    "id": "389f5829-f9ae-4d57-a95d-66f7254c3080"
  }
,
  {
    "question": "Nel periodo dal 1990 ad oggi prendono piede le nuove metodologie di sviluppo del software definite:",
    "answers": [
      "Agili",
      "Tradizionali a cascata",
      "Iterative e incremental",
      "DevOps"
    ],
    "correct_answer": "Agili",
    "id": "077888d9-7700-418a-81e8-2ab61e6827a7"
  },
  {
    "question": "Qual è un modo efficace per implementare il pattern Singleton in Java?",
    "answers": [
      "Dichiarare un costruttore privato e fornire un metodo statico per ottenere l'istanza",
      "Creare più istanze della classe e gestirle tramite un array",
      "Ereditare la classe per impedire più istanze",
      "Dichiarare tutti i metodi statici senza costruttore"
    ],
    "correct_answer": "Dichiarare un costruttore privato e fornire un metodo statico per ottenere l'istanza",
    "id": "a518eedd-aae0-452f-9766-4a770c0d95ac"
  },
  {
    "question": "Qual è il concetto di occultamento dei dati in Java?",
    "answers": [
      "Incapsulare i dati all'interno di una classe e fornire un accesso controllato tramite metodi",
      "Rendere pubblici tutti gli attributi della classe",
      "Condividere i dati tra tutte le classi senza restrizioni",
      "Nascondere i metodi della classe al compilatore"
    ],
    "correct_answer": "Incapsulare i dati all'interno di una classe e fornire un accesso controllato tramite metodi",
    "id": "744769a7-ef02-4905-abf3-18ec678eabdb"
  },
  {
    "question": "In Java un identificatore può iniziare per @",
    "answers": [
      "No, mai",
      "Sì, ma solo per annotazioni",
      "Sì, ma deve essere seguito da una lettera maiuscola",
      "Sì, per convenzione speciale nei package"
    ],
    "correct_answer": "No, mai",
    "id": "c3a726d2-86aa-4365-a90d-945669224ab7"
  },
  {
    "question": "Quale sarà l'output di questo pseudocodice? SET x = 10 IF x > 5 THEN PRINT \"Maggiore\" ELSE PRINT \"Minore\"",
    "answers": [
      "Maggiore",
      "Minore",
      "10",
      "Errore di sintassi"
    ],
    "correct_answer": "Maggiore",
    "id": "ada19651-37c7-4db5-b254-91939721503f"
  }
]
